//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Einstein.Data
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class EinsteinEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“EinsteinEntities”部分中的连接字符串初始化新 EinsteinEntities 对象。
        /// </summary>
        public EinsteinEntities() : base("name=EinsteinEntities", "EinsteinEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 EinsteinEntities 对象。
        /// </summary>
        public EinsteinEntities(string connectionString) : base(connectionString, "EinsteinEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 EinsteinEntities 对象。
        /// </summary>
        public EinsteinEntities(EntityConnection connection) : base(connection, "EinsteinEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CardInfo> CardInfo
        {
            get
            {
                if ((_CardInfo == null))
                {
                    _CardInfo = base.CreateObjectSet<CardInfo>("CardInfo");
                }
                return _CardInfo;
            }
        }
        private ObjectSet<CardInfo> _CardInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<DeptInfo> DeptInfo
        {
            get
            {
                if ((_DeptInfo == null))
                {
                    _DeptInfo = base.CreateObjectSet<DeptInfo>("DeptInfo");
                }
                return _DeptInfo;
            }
        }
        private ObjectSet<DeptInfo> _DeptInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MachineManageInfo> MachineManageInfo
        {
            get
            {
                if ((_MachineManageInfo == null))
                {
                    _MachineManageInfo = base.CreateObjectSet<MachineManageInfo>("MachineManageInfo");
                }
                return _MachineManageInfo;
            }
        }
        private ObjectSet<MachineManageInfo> _MachineManageInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MechineInfo> MechineInfo
        {
            get
            {
                if ((_MechineInfo == null))
                {
                    _MechineInfo = base.CreateObjectSet<MechineInfo>("MechineInfo");
                }
                return _MechineInfo;
            }
        }
        private ObjectSet<MechineInfo> _MechineInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MenuAuthInfo> MenuAuthInfo
        {
            get
            {
                if ((_MenuAuthInfo == null))
                {
                    _MenuAuthInfo = base.CreateObjectSet<MenuAuthInfo>("MenuAuthInfo");
                }
                return _MenuAuthInfo;
            }
        }
        private ObjectSet<MenuAuthInfo> _MenuAuthInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MenuInfo> MenuInfo
        {
            get
            {
                if ((_MenuInfo == null))
                {
                    _MenuInfo = base.CreateObjectSet<MenuInfo>("MenuInfo");
                }
                return _MenuInfo;
            }
        }
        private ObjectSet<MenuInfo> _MenuInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RoleAuth> RoleAuth
        {
            get
            {
                if ((_RoleAuth == null))
                {
                    _RoleAuth = base.CreateObjectSet<RoleAuth>("RoleAuth");
                }
                return _RoleAuth;
            }
        }
        private ObjectSet<RoleAuth> _RoleAuth;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RoleInfo> RoleInfo
        {
            get
            {
                if ((_RoleInfo == null))
                {
                    _RoleInfo = base.CreateObjectSet<RoleInfo>("RoleInfo");
                }
                return _RoleInfo;
            }
        }
        private ObjectSet<RoleInfo> _RoleInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RoleUserInfo> RoleUserInfo
        {
            get
            {
                if ((_RoleUserInfo == null))
                {
                    _RoleUserInfo = base.CreateObjectSet<RoleUserInfo>("RoleUserInfo");
                }
                return _RoleUserInfo;
            }
        }
        private ObjectSet<RoleUserInfo> _RoleUserInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SystemLog> SystemLog
        {
            get
            {
                if ((_SystemLog == null))
                {
                    _SystemLog = base.CreateObjectSet<SystemLog>("SystemLog");
                }
                return _SystemLog;
            }
        }
        private ObjectSet<SystemLog> _SystemLog;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserInfo> UserInfo
        {
            get
            {
                if ((_UserInfo == null))
                {
                    _UserInfo = base.CreateObjectSet<UserInfo>("UserInfo");
                }
                return _UserInfo;
            }
        }
        private ObjectSet<UserInfo> _UserInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserTypeInfo> UserTypeInfo
        {
            get
            {
                if ((_UserTypeInfo == null))
                {
                    _UserTypeInfo = base.CreateObjectSet<UserTypeInfo>("UserTypeInfo");
                }
                return _UserTypeInfo;
            }
        }
        private ObjectSet<UserTypeInfo> _UserTypeInfo;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 CardInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCardInfo(CardInfo cardInfo)
        {
            base.AddObject("CardInfo", cardInfo);
        }
    
        /// <summary>
        /// 用于向 DeptInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDeptInfo(DeptInfo deptInfo)
        {
            base.AddObject("DeptInfo", deptInfo);
        }
    
        /// <summary>
        /// 用于向 MachineManageInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMachineManageInfo(MachineManageInfo machineManageInfo)
        {
            base.AddObject("MachineManageInfo", machineManageInfo);
        }
    
        /// <summary>
        /// 用于向 MechineInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMechineInfo(MechineInfo mechineInfo)
        {
            base.AddObject("MechineInfo", mechineInfo);
        }
    
        /// <summary>
        /// 用于向 MenuAuthInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMenuAuthInfo(MenuAuthInfo menuAuthInfo)
        {
            base.AddObject("MenuAuthInfo", menuAuthInfo);
        }
    
        /// <summary>
        /// 用于向 MenuInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMenuInfo(MenuInfo menuInfo)
        {
            base.AddObject("MenuInfo", menuInfo);
        }
    
        /// <summary>
        /// 用于向 RoleAuth EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRoleAuth(RoleAuth roleAuth)
        {
            base.AddObject("RoleAuth", roleAuth);
        }
    
        /// <summary>
        /// 用于向 RoleInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRoleInfo(RoleInfo roleInfo)
        {
            base.AddObject("RoleInfo", roleInfo);
        }
    
        /// <summary>
        /// 用于向 RoleUserInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRoleUserInfo(RoleUserInfo roleUserInfo)
        {
            base.AddObject("RoleUserInfo", roleUserInfo);
        }
    
        /// <summary>
        /// 用于向 SystemLog EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSystemLog(SystemLog systemLog)
        {
            base.AddObject("SystemLog", systemLog);
        }
    
        /// <summary>
        /// 用于向 UserInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserInfo(UserInfo userInfo)
        {
            base.AddObject("UserInfo", userInfo);
        }
    
        /// <summary>
        /// 用于向 UserTypeInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserTypeInfo(UserTypeInfo userTypeInfo)
        {
            base.AddObject("UserTypeInfo", userTypeInfo);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="CardInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CardInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CardInfo 对象。
        /// </summary>
        /// <param name="cardID">CardID 属性的初始值。</param>
        /// <param name="status">Status 属性的初始值。</param>
        public static CardInfo CreateCardInfo(global::System.String cardID, global::System.Int32 status)
        {
            CardInfo cardInfo = new CardInfo();
            cardInfo.CardID = cardID;
            cardInfo.Status = status;
            return cardInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardID
        {
            get
            {
                return _CardID;
            }
            set
            {
                if (_CardID != value)
                {
                    OnCardIDChanging(value);
                    ReportPropertyChanging("CardID");
                    _CardID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CardID");
                    OnCardIDChanged();
                }
            }
        }
        private global::System.String _CardID;
        partial void OnCardIDChanging(global::System.String value);
        partial void OnCardIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhysicalID
        {
            get
            {
                return _PhysicalID;
            }
            set
            {
                OnPhysicalIDChanging(value);
                ReportPropertyChanging("PhysicalID");
                _PhysicalID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhysicalID");
                OnPhysicalIDChanged();
            }
        }
        private global::System.String _PhysicalID;
        partial void OnPhysicalIDChanging(global::System.String value);
        partial void OnPhysicalIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActivateDate
        {
            get
            {
                return _ActivateDate;
            }
            set
            {
                OnActivateDateChanging(value);
                ReportPropertyChanging("ActivateDate");
                _ActivateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivateDate");
                OnActivateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActivateDate;
        partial void OnActivateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActivateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActivatePerson
        {
            get
            {
                return _ActivatePerson;
            }
            set
            {
                OnActivatePersonChanging(value);
                ReportPropertyChanging("ActivatePerson");
                _ActivatePerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActivatePerson");
                OnActivatePersonChanged();
            }
        }
        private global::System.String _ActivatePerson;
        partial void OnActivatePersonChanging(global::System.String value);
        partial void OnActivatePersonChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CancelDate
        {
            get
            {
                return _CancelDate;
            }
            set
            {
                OnCancelDateChanging(value);
                ReportPropertyChanging("CancelDate");
                _CancelDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CancelDate");
                OnCancelDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CancelDate;
        partial void OnCancelDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCancelDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CancelPerson
        {
            get
            {
                return _CancelPerson;
            }
            set
            {
                OnCancelPersonChanging(value);
                ReportPropertyChanging("CancelPerson");
                _CancelPerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CancelPerson");
                OnCancelPersonChanged();
            }
        }
        private global::System.String _CancelPerson;
        partial void OnCancelPersonChanging(global::System.String value);
        partial void OnCancelPersonChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="DeptInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeptInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 DeptInfo 对象。
        /// </summary>
        /// <param name="deptID">DeptID 属性的初始值。</param>
        /// <param name="deptName">DeptName 属性的初始值。</param>
        /// <param name="parentID">ParentID 属性的初始值。</param>
        public static DeptInfo CreateDeptInfo(global::System.Int32 deptID, global::System.String deptName, global::System.Int32 parentID)
        {
            DeptInfo deptInfo = new DeptInfo();
            deptInfo.DeptID = deptID;
            deptInfo.DeptName = deptName;
            deptInfo.ParentID = parentID;
            return deptInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeptID
        {
            get
            {
                return _DeptID;
            }
            set
            {
                if (_DeptID != value)
                {
                    OnDeptIDChanging(value);
                    ReportPropertyChanging("DeptID");
                    _DeptID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeptID");
                    OnDeptIDChanged();
                }
            }
        }
        private global::System.Int32 _DeptID;
        partial void OnDeptIDChanging(global::System.Int32 value);
        partial void OnDeptIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeptName
        {
            get
            {
                return _DeptName;
            }
            set
            {
                OnDeptNameChanging(value);
                ReportPropertyChanging("DeptName");
                _DeptName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeptName");
                OnDeptNameChanged();
            }
        }
        private global::System.String _DeptName;
        partial void OnDeptNameChanging(global::System.String value);
        partial void OnDeptNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private global::System.Int32 _ParentID;
        partial void OnParentIDChanging(global::System.Int32 value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="MachineManageInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MachineManageInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MachineManageInfo 对象。
        /// </summary>
        /// <param name="manageDeptID">ManageDeptID 属性的初始值。</param>
        /// <param name="manageDeptName">ManageDeptName 属性的初始值。</param>
        /// <param name="parentID">ParentID 属性的初始值。</param>
        public static MachineManageInfo CreateMachineManageInfo(global::System.Int32 manageDeptID, global::System.String manageDeptName, global::System.Int32 parentID)
        {
            MachineManageInfo machineManageInfo = new MachineManageInfo();
            machineManageInfo.ManageDeptID = manageDeptID;
            machineManageInfo.ManageDeptName = manageDeptName;
            machineManageInfo.ParentID = parentID;
            return machineManageInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManageDeptID
        {
            get
            {
                return _ManageDeptID;
            }
            set
            {
                if (_ManageDeptID != value)
                {
                    OnManageDeptIDChanging(value);
                    ReportPropertyChanging("ManageDeptID");
                    _ManageDeptID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ManageDeptID");
                    OnManageDeptIDChanged();
                }
            }
        }
        private global::System.Int32 _ManageDeptID;
        partial void OnManageDeptIDChanging(global::System.Int32 value);
        partial void OnManageDeptIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManageDeptName
        {
            get
            {
                return _ManageDeptName;
            }
            set
            {
                OnManageDeptNameChanging(value);
                ReportPropertyChanging("ManageDeptName");
                _ManageDeptName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ManageDeptName");
                OnManageDeptNameChanged();
            }
        }
        private global::System.String _ManageDeptName;
        partial void OnManageDeptNameChanging(global::System.String value);
        partial void OnManageDeptNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private global::System.Int32 _ParentID;
        partial void OnParentIDChanging(global::System.Int32 value);
        partial void OnParentIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="MechineInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MechineInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MechineInfo 对象。
        /// </summary>
        /// <param name="mechineID">MechineID 属性的初始值。</param>
        /// <param name="manageDeptID">ManageDeptID 属性的初始值。</param>
        /// <param name="machineTypeID">MachineTypeID 属性的初始值。</param>
        /// <param name="communicationInterface">CommunicationInterface 属性的初始值。</param>
        public static MechineInfo CreateMechineInfo(global::System.String mechineID, global::System.Int32 manageDeptID, global::System.Int32 machineTypeID, global::System.Int32 communicationInterface)
        {
            MechineInfo mechineInfo = new MechineInfo();
            mechineInfo.MechineID = mechineID;
            mechineInfo.ManageDeptID = manageDeptID;
            mechineInfo.MachineTypeID = machineTypeID;
            mechineInfo.CommunicationInterface = communicationInterface;
            return mechineInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MechineID
        {
            get
            {
                return _MechineID;
            }
            set
            {
                if (_MechineID != value)
                {
                    OnMechineIDChanging(value);
                    ReportPropertyChanging("MechineID");
                    _MechineID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MechineID");
                    OnMechineIDChanged();
                }
            }
        }
        private global::System.String _MechineID;
        partial void OnMechineIDChanging(global::System.String value);
        partial void OnMechineIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManageDeptID
        {
            get
            {
                return _ManageDeptID;
            }
            set
            {
                OnManageDeptIDChanging(value);
                ReportPropertyChanging("ManageDeptID");
                _ManageDeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManageDeptID");
                OnManageDeptIDChanged();
            }
        }
        private global::System.Int32 _ManageDeptID;
        partial void OnManageDeptIDChanging(global::System.Int32 value);
        partial void OnManageDeptIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineTypeID
        {
            get
            {
                return _MachineTypeID;
            }
            set
            {
                OnMachineTypeIDChanging(value);
                ReportPropertyChanging("MachineTypeID");
                _MachineTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MachineTypeID");
                OnMachineTypeIDChanged();
            }
        }
        private global::System.Int32 _MachineTypeID;
        partial void OnMachineTypeIDChanging(global::System.Int32 value);
        partial void OnMachineTypeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationInterface
        {
            get
            {
                return _CommunicationInterface;
            }
            set
            {
                OnCommunicationInterfaceChanging(value);
                ReportPropertyChanging("CommunicationInterface");
                _CommunicationInterface = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommunicationInterface");
                OnCommunicationInterfaceChanged();
            }
        }
        private global::System.Int32 _CommunicationInterface;
        partial void OnCommunicationInterfaceChanging(global::System.Int32 value);
        partial void OnCommunicationInterfaceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IPAdress
        {
            get
            {
                return _IPAdress;
            }
            set
            {
                OnIPAdressChanging(value);
                ReportPropertyChanging("IPAdress");
                _IPAdress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IPAdress");
                OnIPAdressChanged();
            }
        }
        private global::System.String _IPAdress;
        partial void OnIPAdressChanging(global::System.String value);
        partial void OnIPAdressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubnetMask
        {
            get
            {
                return _SubnetMask;
            }
            set
            {
                OnSubnetMaskChanging(value);
                ReportPropertyChanging("SubnetMask");
                _SubnetMask = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubnetMask");
                OnSubnetMaskChanged();
            }
        }
        private global::System.String _SubnetMask;
        partial void OnSubnetMaskChanging(global::System.String value);
        partial void OnSubnetMaskChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gateway
        {
            get
            {
                return _Gateway;
            }
            set
            {
                OnGatewayChanging(value);
                ReportPropertyChanging("Gateway");
                _Gateway = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gateway");
                OnGatewayChanged();
            }
        }
        private global::System.String _Gateway;
        partial void OnGatewayChanging(global::System.String value);
        partial void OnGatewayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Port
        {
            get
            {
                return _Port;
            }
            set
            {
                OnPortChanging(value);
                ReportPropertyChanging("Port");
                _Port = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Port");
                OnPortChanged();
            }
        }
        private Nullable<global::System.Int32> _Port;
        partial void OnPortChanging(Nullable<global::System.Int32> value);
        partial void OnPortChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="MenuAuthInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuAuthInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MenuAuthInfo 对象。
        /// </summary>
        /// <param name="buttonID">ButtonID 属性的初始值。</param>
        /// <param name="belongMenu">BelongMenu 属性的初始值。</param>
        /// <param name="buttonName">ButtonName 属性的初始值。</param>
        public static MenuAuthInfo CreateMenuAuthInfo(global::System.Int32 buttonID, global::System.String belongMenu, global::System.String buttonName)
        {
            MenuAuthInfo menuAuthInfo = new MenuAuthInfo();
            menuAuthInfo.ButtonID = buttonID;
            menuAuthInfo.BelongMenu = belongMenu;
            menuAuthInfo.ButtonName = buttonName;
            return menuAuthInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ButtonID
        {
            get
            {
                return _ButtonID;
            }
            set
            {
                if (_ButtonID != value)
                {
                    OnButtonIDChanging(value);
                    ReportPropertyChanging("ButtonID");
                    _ButtonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ButtonID");
                    OnButtonIDChanged();
                }
            }
        }
        private global::System.Int32 _ButtonID;
        partial void OnButtonIDChanging(global::System.Int32 value);
        partial void OnButtonIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BelongMenu
        {
            get
            {
                return _BelongMenu;
            }
            set
            {
                OnBelongMenuChanging(value);
                ReportPropertyChanging("BelongMenu");
                _BelongMenu = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BelongMenu");
                OnBelongMenuChanged();
            }
        }
        private global::System.String _BelongMenu;
        partial void OnBelongMenuChanging(global::System.String value);
        partial void OnBelongMenuChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ButtonName
        {
            get
            {
                return _ButtonName;
            }
            set
            {
                OnButtonNameChanging(value);
                ReportPropertyChanging("ButtonName");
                _ButtonName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ButtonName");
                OnButtonNameChanged();
            }
        }
        private global::System.String _ButtonName;
        partial void OnButtonNameChanging(global::System.String value);
        partial void OnButtonNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="MenuInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MenuInfo 对象。
        /// </summary>
        /// <param name="menuID">MenuID 属性的初始值。</param>
        /// <param name="menuName">MenuName 属性的初始值。</param>
        /// <param name="parentID">ParentID 属性的初始值。</param>
        public static MenuInfo CreateMenuInfo(global::System.String menuID, global::System.String menuName, global::System.String parentID)
        {
            MenuInfo menuInfo = new MenuInfo();
            menuInfo.MenuID = menuID;
            menuInfo.MenuName = menuName;
            menuInfo.ParentID = parentID;
            return menuInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuID
        {
            get
            {
                return _MenuID;
            }
            set
            {
                if (_MenuID != value)
                {
                    OnMenuIDChanging(value);
                    ReportPropertyChanging("MenuID");
                    _MenuID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MenuID");
                    OnMenuIDChanged();
                }
            }
        }
        private global::System.String _MenuID;
        partial void OnMenuIDChanging(global::System.String value);
        partial void OnMenuIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuName
        {
            get
            {
                return _MenuName;
            }
            set
            {
                OnMenuNameChanging(value);
                ReportPropertyChanging("MenuName");
                _MenuName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MenuName");
                OnMenuNameChanged();
            }
        }
        private global::System.String _MenuName;
        partial void OnMenuNameChanging(global::System.String value);
        partial void OnMenuNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private global::System.String _ParentID;
        partial void OnParentIDChanging(global::System.String value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortcutKey
        {
            get
            {
                return _ShortcutKey;
            }
            set
            {
                OnShortcutKeyChanging(value);
                ReportPropertyChanging("ShortcutKey");
                _ShortcutKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortcutKey");
                OnShortcutKeyChanged();
            }
        }
        private global::System.String _ShortcutKey;
        partial void OnShortcutKeyChanging(global::System.String value);
        partial void OnShortcutKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IconName
        {
            get
            {
                return _IconName;
            }
            set
            {
                OnIconNameChanging(value);
                ReportPropertyChanging("IconName");
                _IconName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IconName");
                OnIconNameChanged();
            }
        }
        private global::System.String _IconName;
        partial void OnIconNameChanging(global::System.String value);
        partial void OnIconNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjectName
        {
            get
            {
                return _ObjectName;
            }
            set
            {
                OnObjectNameChanging(value);
                ReportPropertyChanging("ObjectName");
                _ObjectName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjectName");
                OnObjectNameChanged();
            }
        }
        private global::System.String _ObjectName;
        partial void OnObjectNameChanging(global::System.String value);
        partial void OnObjectNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjectParameters
        {
            get
            {
                return _ObjectParameters;
            }
            set
            {
                OnObjectParametersChanging(value);
                ReportPropertyChanging("ObjectParameters");
                _ObjectParameters = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjectParameters");
                OnObjectParametersChanged();
            }
        }
        private global::System.String _ObjectParameters;
        partial void OnObjectParametersChanging(global::System.String value);
        partial void OnObjectParametersChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="RoleAuth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleAuth : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RoleAuth 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="menuID">MenuID 属性的初始值。</param>
        /// <param name="buttonID">ButtonID 属性的初始值。</param>
        public static RoleAuth CreateRoleAuth(global::System.Int32 roleID, global::System.String menuID, global::System.Int32 buttonID)
        {
            RoleAuth roleAuth = new RoleAuth();
            roleAuth.RoleID = roleID;
            roleAuth.MenuID = menuID;
            roleAuth.ButtonID = buttonID;
            return roleAuth;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuID
        {
            get
            {
                return _MenuID;
            }
            set
            {
                if (_MenuID != value)
                {
                    OnMenuIDChanging(value);
                    ReportPropertyChanging("MenuID");
                    _MenuID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MenuID");
                    OnMenuIDChanged();
                }
            }
        }
        private global::System.String _MenuID;
        partial void OnMenuIDChanging(global::System.String value);
        partial void OnMenuIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ButtonID
        {
            get
            {
                return _ButtonID;
            }
            set
            {
                if (_ButtonID != value)
                {
                    OnButtonIDChanging(value);
                    ReportPropertyChanging("ButtonID");
                    _ButtonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ButtonID");
                    OnButtonIDChanged();
                }
            }
        }
        private global::System.Int32 _ButtonID;
        partial void OnButtonIDChanging(global::System.Int32 value);
        partial void OnButtonIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="RoleInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RoleInfo 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="roleName">RoleName 属性的初始值。</param>
        /// <param name="createPerson">CreatePerson 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        public static RoleInfo CreateRoleInfo(global::System.Int32 roleID, global::System.String roleName, global::System.String createPerson, global::System.DateTime createTime)
        {
            RoleInfo roleInfo = new RoleInfo();
            roleInfo.RoleID = roleID;
            roleInfo.RoleName = roleName;
            roleInfo.CreatePerson = createPerson;
            roleInfo.CreateTime = createTime;
            return roleInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatePerson
        {
            get
            {
                return _CreatePerson;
            }
            set
            {
                OnCreatePersonChanging(value);
                ReportPropertyChanging("CreatePerson");
                _CreatePerson = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatePerson");
                OnCreatePersonChanged();
            }
        }
        private global::System.String _CreatePerson;
        partial void OnCreatePersonChanging(global::System.String value);
        partial void OnCreatePersonChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatePerson
        {
            get
            {
                return _UpdatePerson;
            }
            set
            {
                OnUpdatePersonChanging(value);
                ReportPropertyChanging("UpdatePerson");
                _UpdatePerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatePerson");
                OnUpdatePersonChanged();
            }
        }
        private global::System.String _UpdatePerson;
        partial void OnUpdatePersonChanging(global::System.String value);
        partial void OnUpdatePersonChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateTime;
        partial void OnUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="RoleUserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleUserInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RoleUserInfo 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        public static RoleUserInfo CreateRoleUserInfo(global::System.Int32 roleID, global::System.Int32 userID)
        {
            RoleUserInfo roleUserInfo = new RoleUserInfo();
            roleUserInfo.RoleID = roleID;
            roleUserInfo.UserID = userID;
            return roleUserInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="SystemLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemLog : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SystemLog 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="operator">Operator 属性的初始值。</param>
        /// <param name="operateTime">OperateTime 属性的初始值。</param>
        /// <param name="detail">Detail 属性的初始值。</param>
        public static SystemLog CreateSystemLog(global::System.Int32 id, global::System.String @operator, global::System.DateTime operateTime, global::System.String detail)
        {
            SystemLog systemLog = new SystemLog();
            systemLog.ID = id;
            systemLog.Operator = @operator;
            systemLog.OperateTime = operateTime;
            systemLog.Detail = detail;
            return systemLog;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Operator
        {
            get
            {
                return _Operator;
            }
            set
            {
                OnOperatorChanging(value);
                ReportPropertyChanging("Operator");
                _Operator = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Operator");
                OnOperatorChanged();
            }
        }
        private global::System.String _Operator;
        partial void OnOperatorChanging(global::System.String value);
        partial void OnOperatorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OperateTime
        {
            get
            {
                return _OperateTime;
            }
            set
            {
                OnOperateTimeChanging(value);
                ReportPropertyChanging("OperateTime");
                _OperateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperateTime");
                OnOperateTimeChanged();
            }
        }
        private global::System.DateTime _OperateTime;
        partial void OnOperateTimeChanging(global::System.DateTime value);
        partial void OnOperateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Detail
        {
            get
            {
                return _Detail;
            }
            set
            {
                OnDetailChanging(value);
                ReportPropertyChanging("Detail");
                _Detail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Detail");
                OnDetailChanged();
            }
        }
        private global::System.String _Detail;
        partial void OnDetailChanging(global::System.String value);
        partial void OnDetailChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="UserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserInfo 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        /// <param name="deptID">DeptID 属性的初始值。</param>
        /// <param name="sex">Sex 属性的初始值。</param>
        /// <param name="activateDate">ActivateDate 属性的初始值。</param>
        public static UserInfo CreateUserInfo(global::System.String userID, global::System.String userName, global::System.Int32 deptID, global::System.Int32 sex, global::System.DateTime activateDate)
        {
            UserInfo userInfo = new UserInfo();
            userInfo.UserID = userID;
            userInfo.UserName = userName;
            userInfo.DeptID = deptID;
            userInfo.Sex = sex;
            userInfo.ActivateDate = activateDate;
            return userInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeptID
        {
            get
            {
                return _DeptID;
            }
            set
            {
                OnDeptIDChanging(value);
                ReportPropertyChanging("DeptID");
                _DeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptID");
                OnDeptIDChanged();
            }
        }
        private global::System.Int32 _DeptID;
        partial void OnDeptIDChanging(global::System.Int32 value);
        partial void OnDeptIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardID
        {
            get
            {
                return _CardID;
            }
            set
            {
                OnCardIDChanging(value);
                ReportPropertyChanging("CardID");
                _CardID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardID");
                OnCardIDChanged();
            }
        }
        private global::System.String _CardID;
        partial void OnCardIDChanging(global::System.String value);
        partial void OnCardIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhysicalID
        {
            get
            {
                return _PhysicalID;
            }
            set
            {
                OnPhysicalIDChanging(value);
                ReportPropertyChanging("PhysicalID");
                _PhysicalID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhysicalID");
                OnPhysicalIDChanged();
            }
        }
        private global::System.String _PhysicalID;
        partial void OnPhysicalIDChanging(global::System.String value);
        partial void OnPhysicalIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserTypeID
        {
            get
            {
                return _UserTypeID;
            }
            set
            {
                OnUserTypeIDChanging(value);
                ReportPropertyChanging("UserTypeID");
                _UserTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserTypeID");
                OnUserTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserTypeID;
        partial void OnUserTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserTypeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.Int32 _Sex;
        partial void OnSexChanging(global::System.Int32 value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ActivateDate
        {
            get
            {
                return _ActivateDate;
            }
            set
            {
                OnActivateDateChanging(value);
                ReportPropertyChanging("ActivateDate");
                _ActivateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivateDate");
                OnActivateDateChanged();
            }
        }
        private global::System.DateTime _ActivateDate;
        partial void OnActivateDateChanging(global::System.DateTime value);
        partial void OnActivateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CancelDate
        {
            get
            {
                return _CancelDate;
            }
            set
            {
                OnCancelDateChanging(value);
                ReportPropertyChanging("CancelDate");
                _CancelDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CancelDate");
                OnCancelDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CancelDate;
        partial void OnCancelDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCancelDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EinsteinModel", Name="UserTypeInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserTypeInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserTypeInfo 对象。
        /// </summary>
        /// <param name="userTypeID">UserTypeID 属性的初始值。</param>
        /// <param name="userTypeName">UserTypeName 属性的初始值。</param>
        public static UserTypeInfo CreateUserTypeInfo(global::System.Int32 userTypeID, global::System.String userTypeName)
        {
            UserTypeInfo userTypeInfo = new UserTypeInfo();
            userTypeInfo.UserTypeID = userTypeID;
            userTypeInfo.UserTypeName = userTypeName;
            return userTypeInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTypeID
        {
            get
            {
                return _UserTypeID;
            }
            set
            {
                if (_UserTypeID != value)
                {
                    OnUserTypeIDChanging(value);
                    ReportPropertyChanging("UserTypeID");
                    _UserTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserTypeID");
                    OnUserTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _UserTypeID;
        partial void OnUserTypeIDChanging(global::System.Int32 value);
        partial void OnUserTypeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserTypeName
        {
            get
            {
                return _UserTypeName;
            }
            set
            {
                OnUserTypeNameChanging(value);
                ReportPropertyChanging("UserTypeName");
                _UserTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserTypeName");
                OnUserTypeNameChanged();
            }
        }
        private global::System.String _UserTypeName;
        partial void OnUserTypeNameChanging(global::System.String value);
        partial void OnUserTypeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();

        #endregion
    
    }

    #endregion
    
}
